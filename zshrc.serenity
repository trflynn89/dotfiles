#!/usr/bin/env zsh

# Utilities for working with SerenityOS - https://github.com/SerenityOS/serenity

create_serenity_clangd()
{
    if [[ ! -d "${SERENITY_SOURCE_DIR}" ]] ; then
        return
    fi

    cat <<EOF > "${SERENITY_SOURCE_DIR}/.clangd"
CompileFlags:
  Add:
    - "-D__serenity__"
  CompilationDatabase: "Build/${SERENITY_ARCH}"

Diagnostics:
  ClangTidy:
    Remove:
      - misc-const-correctness
      - misc-no-recursion
      - misc-use-anonymous-namespace
      - performance-unnecessary-copy-initialization
      - readability-function-cognitive-complexity
EOF
}

create_lagom_clangd()
{
    if [[ ! -d "${SERENITY_SOURCE_DIR}" ]] ; then
        return
    fi

    cat <<EOF > "${SERENITY_SOURCE_DIR}/.clangd"
CompileFlags:
  CompilationDatabase: "Build/lagom"

Diagnostics:
  ClangTidy:
    Remove:
      - misc-const-correctness
      - misc-no-recursion
      - misc-use-anonymous-namespace
      - performance-unnecessary-copy-initialization
      - readability-function-cognitive-complexity
EOF
}

create_serenity_sync_local()
{
    if [[ ! -d "${SERENITY_SOURCE_DIR}" ]] ; then
        return
    fi

    local host_os="$(uname -s)"

    cat <<EOF > "${SERENITY_SOURCE_DIR}/sync-local.sh"
#!/bin/sh

echo "America/New_York" > "mnt/etc/timezone"
echo "fortune" > "mnt/home/anon/.shellrc"

EOF

    if [[ "${host_os}" == "Darwin" ]] ; then
        cat <<EOF >> "${SERENITY_SOURCE_DIR}/sync-local.sh"
sed -i "" "s/Width=1024/Width=1600/" "mnt/etc/WindowServer.ini"
sed -i "" "s/Height=768/Height=900/" "mnt/etc/WindowServer.ini"
sed -i "" "s/Name=Default/Name=Redmond 2000/" "mnt/etc/WindowServer.ini"

sed -i "" "s/TimeFormat=%T/TimeFormat=\xf4\x8c\xb4\x8b %b %d %r/" "mnt/home/anon/.config/Taskbar.ini"
EOF
    else
        cat <<EOF >> "${SERENITY_SOURCE_DIR}/sync-local.sh"
sed -i "s/Width=1024/Width=1600/" "mnt/etc/WindowServer.ini"
sed -i "s/Height=768/Height=900/" "mnt/etc/WindowServer.ini"
sed -i "s/Name=Default/Name=Redmond 2000/" "mnt/etc/WindowServer.ini"

sed -i "s/TimeFormat=%T/TimeFormat=\xf4\x8c\xb4\x8b %b %d %r/" "mnt/home/anon/.config/Taskbar.ini"
EOF
    fi
}

initialize_serenity()
{
    if [[ $# -eq 0 ]] ; then
        create_serenity_clangd
        create_serenity_sync_local
    else
        create_lagom_clangd
    fi
}

lagom_sanitize()
{
    local flag

    if [[ $# -eq 0 || "${1}" == "off" ]] ; then
        flag="OFF"
    else
        flag="ON"
    fi

    cmake -S Meta/Lagom -B Build/lagom -DBUILD_LAGOM=ON -DENABLE_ADDRESS_SANITIZER="${flag}" -DENABLE_UNDEFINED_SANITIZER="${flag}"
}

lagom_web()
{
    local flag

    if [[ $# -eq 0 || "${1}" == "off" ]] ; then
        flag="OFF"
    else
        flag="ON"
    fi

    cmake -S Meta/Lagom -B Build/lagom -DBUILD_LAGOM=ON -DENABLE_LAGOM_LIBWEB="${flag}" -DENABLE_LAGOM_LADYBIRD="${flag}"
}

serenity()
{
    if [[ ! -d "${SERENITY_SOURCE_DIR}" ]] ; then
        return
    fi

    local host_os="$(uname -s)"

    export CC=gcc
    export CXX=g++

    if [[ "${host_os}" == "Darwin" ]] ; then
        local xcode_sdk_path=$(xcrun --sdk macosx --show-sdk-path)
        local xcode_lib_path="${xcode_sdk_path}/usr/lib"

        export LIBRARY_PATH="${LIBRARY_PATH:+$LIBRARY_PATH:}${xcode_lib_path}"
    fi

    if [[ $# -eq 1 ]] ; then
        "${SERENITY_SOURCE_DIR}/Meta/serenity.sh" "${1}" "${SERENITY_ARCH}" "GNU"
    else
        "${SERENITY_SOURCE_DIR}/Meta/serenity.sh" "${1}" "lagom" "${@:2}"
    fi
}

init_shell()
{
    local serenity_source_dir="${HOME}/workspace/serenity"

    if [[ -d "${serenity_source_dir}" ]] ; then
        export SERENITY_SOURCE_DIR="${serenity_source_dir}"
        export SERENITY_RAM_SIZE=2048M
        export SERENITY_ARCH=x86_64

        alias si=initialize_serenity
        alias sb='serenity build'
        alias sr='serenity run'
    fi
}

init_shell
